import subprocess

subprocess.run("color 0A", shell=True)
import sys
import os
import ctypes
import time
import winreg

def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

def run_cmd(cmd, silent=True):
    if silent:
        return subprocess.run(cmd, shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    else:
        return subprocess.run(cmd, shell=True)

def kill_processes(process_list):
    for proc in process_list:
        run_cmd(f'taskkill /f /im {proc}')

def stop_disable_services(service_list):
    for svc in service_list:
        run_cmd(f'sc stop {svc}')
        run_cmd(f'sc config {svc} start= disabled')

def remove_bloatware_apps(app_keywords):
    for keyword in app_keywords:
        # Using PowerShell to remove AppxPackages matching the keyword
        cmd = f'powershell -Command "Get-AppxPackage *{keyword}* | Remove-AppxPackage"'
        run_cmd(cmd)

def set_registry_value(root, path, name, value, value_type):
    try:
        key = winreg.CreateKey(root, path)
        if value_type == 'DWORD':
            winreg.SetValueEx(key, name, 0, winreg.REG_DWORD, value)
        elif value_type == 'SZ':
            winreg.SetValueEx(key, name, 0, winreg.REG_SZ, str(value))
        winreg.CloseKey(key)
    except Exception as e:
        print(f"[!] Failed to set registry value {path}\\{name}: {e}")

def main():
    if not is_admin():
        print("[!] ERROR: Please run this script as Administrator.")
        input("Press Enter to exit...")
        sys.exit(1)

    print("[*] Running as Admin is confirmed.")
    time.sleep(1)

    print("[*] Killing known background RAM/GPU hogs...")
    kill_processes([
        "OneDrive.exe",
        "YourPhone.exe",
        "XboxGameBar.exe",
        "Steam.exe",
        "RuntimeBroker.exe",
        "SearchIndexer.exe",
        "Cortana.exe",
        "Teams.exe",
        "GameBarPresenceWriter.exe",
        "ShellExperienceHost.exe",
        "Widgets.exe",
        "smartscreen.exe"
    ])

    print("[*] Disabling background services...")
    stop_disable_services([
        "SysMain",
        "DiagTrack",
        "WSearch",
        "Fax",
        "RetailDemo",
        "WerSvc",
        "PcaSvc",
        "BITS",
        "TrkWks",
        "XblGameSave",
        "XblAuthManager",
        "WbioSrvc"
    ])

    print("[*] Removing bloatware apps...")
    remove_bloatware_apps([
        "xbox",
        "bing",
        "YourPhone",
        "officehub",
        "people",
        "solitaire",
        "zune"
    ])

    print("[*] Disabling telemetry...")
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Policies\Microsoft\Windows\DataCollection", "AllowTelemetry", 0, 'DWORD')
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds", "AllowBuildPreview", 0, 'DWORD')

    print("[*] Clearing standby RAM (empty.exe)...")
    empty_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "empty.exe")
    if os.path.isfile(empty_path):
        run_cmd(f'"{empty_path}" standbylist')
    else:
        print("[!] empty.exe not found! Please place it in the same folder as this script.")

    print("[*] Enabling Hardware-Accelerated GPU Scheduling...")
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"SYSTEM\CurrentControlSet\Control\GraphicsDrivers", "HwSchMode", 2, 'DWORD')

    print("[*] Disabling MPO (Multi-Plane Overlay)...")
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"Software\Microsoft\Windows\Dwm", "OverlayTestMode", 5, 'DWORD')

    print("[*] Setting High GPU Priority...")
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games", "GPU Priority", 8, 'DWORD')

    print("[*] Disabling GPU power throttling...")
    set_registry_value(winreg.HKEY_LOCAL_MACHINE, r"SYSTEM\CurrentControlSet\Control\Power\PowerThrottling", "PowerThrottlingOff", 1, 'DWORD')

    print("[*] Setting Ultimate Performance mode...")
    run_cmd('powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61')
    run_cmd('powercfg -setactive e9a42b02-d5df-448d-aa00-03f14749eb61')

    print("[*] Applying TCP/IP tweaks...")
    run_cmd('netsh interface tcp set heuristics disabled')
    run_cmd('netsh interface tcp set global autotuninglevel=disabled')
    run_cmd('netsh interface tcp set global rss=enabled')
    run_cmd('netsh interface tcp set global dca=enabled')
    run_cmd('netsh interface tcp set global chimney=enabled')
    run_cmd('netsh int ip reset')
    run_cmd('ipconfig /flushdns')
    run_cmd('netsh winsock reset')

    print("[*] Disabling Filter Keys delay and keyboard enhancements...")
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Accessibility\Keyboard Response", "AutoRepeatDelay", "200", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Accessibility\Keyboard Response", "AutoRepeatRate", "10", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Accessibility\Keyboard Response", "BounceTime", "0", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Accessibility\Keyboard Response", "Flags", "0", 'SZ')

    print("[*] Reducing input lag (mouse filter off)...")
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Mouse", "MouseFilterThreshold", "0", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Mouse", "MouseSpeed", "0", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Mouse", "MouseThreshold1", "0", 'SZ')
    set_registry_value(winreg.HKEY_CURRENT_USER, r"Control Panel\Mouse", "MouseThreshold2", "0", 'SZ')

    print("[*] Clearing TEMP & Prefetch...")
    temp_path = os.getenv("TEMP")
    if temp_path:
        run_cmd(f'del /f /s /q "{temp_path}\\*"')
    run_cmd('del /f /s /q "C:\\Windows\\Prefetch\\*"')

    print()
    print("[âœ…] FULL OPTIMIZATION COMPLETE.")
    print("[!] Recommended: Restart PC to finalize performance tweaks.")
    input("Press Enter to exit...")

if __name__ == "__main__":
    main()
